CREATE TABLE "logs" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "action" varchar,
  "user_id" integer,
  "details" text,
  "created_at" timestamp
);

CREATE TABLE "alert" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "description" text,
  "parameter" integer,
  "created_at" timestamp,
  "user_id" integer NOT NULL,
  "movement_id" integer,
  "closing_id" integer
);

CREATE TABLE "user" (
  "id" integer PRIMARY KEY,
  "name" varchar NOT NULL,
  "last_name" varchar NOT NULL,
  "email" varchar UNIQUE NOT NULL,
  "password" varchar NOT NULL,
  "status" bool,
  "created_at" timestamp,
  "rol_id" integer NOT NULL
);

CREATE TABLE "rol" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar UNIQUE NOT NULL,
  "description" text NOT NULL
);

CREATE TABLE "movement" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "ammount" integer NOT NULL,
  "type" bool NOT NULL,
  "created_at" timestamp,
  "user_id" integer NOT NULL,
  "closing_id" integer,
  "payment_method_id" integer NOT NULL
);

CREATE TABLE "payment_method" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar NOT NULL,
  "active" bool NOT NULL,
  "account_number" integer
);

CREATE TABLE "balance" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "ammount" integer NOT NULL,
  "created_at" timestamp,
  "payment_method_id" integer
);

CREATE TABLE "closing" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "total" integer NOT NULL,
  "comments" text,
  "expected_balance" integer NOT NULL,
  "counted" integer NOT NULL,
  "difference" integer NOT NULL,
  "created_at" timestamp,
  "user_id" integer NOT NULL
);

COMMENT ON COLUMN "rol"."name" IS 'admin | user | closing operator';

ALTER TABLE "user" ADD FOREIGN KEY ("rol_id") REFERENCES "rol" ("id");

ALTER TABLE "alert" ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id");

ALTER TABLE "alert" ADD FOREIGN KEY ("movement_id") REFERENCES "movement" ("id");

ALTER TABLE "alert" ADD FOREIGN KEY ("closing_id") REFERENCES "closing" ("id");

ALTER TABLE "movement" ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id");

ALTER TABLE "movement" ADD FOREIGN KEY ("closing_id") REFERENCES "closing" ("id");

ALTER TABLE "movement" ADD FOREIGN KEY ("payment_method_id") REFERENCES "payment_method" ("id");

ALTER TABLE "balance" ADD FOREIGN KEY ("payment_method_id") REFERENCES "payment_method" ("id");

ALTER TABLE "closing" ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id");
